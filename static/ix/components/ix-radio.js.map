{"file":"ix-radio.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/radio/radio.scss?tag=ix-radio&encapsulation=shadow","src/components/radio/radio.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n @import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n  display: inline-block;\n  position: relative;\n\n  button {\n    all: unset;\n\n    display: inline-flex;\n    position: relative;\n\n    align-items: center;\n    justify-content: center;\n\n    width: 1.125rem;\n    min-width: 1.125rem;\n    max-width: 1.125rem;\n    height: 1.125rem;\n    min-height: 1.125rem;\n    max-height: 1.125rem;\n\n    border: 1px solid white;\n    border-radius: 100px;\n\n    margin-right: 0.5rem;\n  }\n\n  button:focus-visible {\n    outline: 0.0625rem solid var(--theme-color-focus-bdr);\n    outline-offset: var(--theme-radiobtn--focus--outline-offset);\n  }\n\n  input[type=\"radio\"] {\n    display: none;\n  }\n\n  label {\n    display: flex;\n\n    justify-content: flex-start;\n    align-items: flex-start;\n\n    width: 100%;\n    height: 100%;\n  }\n\n  .checkmark {\n    border-radius: 100px;\n    background-color: var(--theme-color-primary--contrast);\n    width: 0.5rem;\n    height: 0.5rem;\n  }\n}\n\n@mixin radio-base() {\n  :host {\n    button {\n      background-color: var(--theme-radiobtn-unchecked--background);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-unchecked--border-color);\n    }\n  }\n\n  :host(:hover) {\n    button {\n      background-color: var(--theme-radiobtn-unchecked--background--hover);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-unchecked--border-color--hover);\n    }\n  }\n\n  :host(:active) {\n    button {\n      background-color: var(--theme-radiobtn-unchecked--background--active);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-unchecked--border-color--active);\n    }\n  }\n\n  :host(.checked),\n  :host([indeterminate]) {\n    button {\n      background-color: var(--theme-radiobtn-checked--background);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-checked--border-color);\n    }\n  }\n\n  :host(.checked:hover),\n  :host([indeterminate]:hover) {\n    button {\n      background-color: var(--theme-radiobtn-checked--background--hover);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-checked--border-color--hover);\n    }\n  }\n\n  :host(.checked:active),\n  :host([indeterminate]:active) {\n    button {\n      background-color: var(--theme-radiobtn-checked--background--active);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-checked--border-color--active);\n    }\n  }\n\n  :host(.disabled) {\n    pointer-events: none;\n\n    button {\n      background-color: var(--theme-radiobtn-unchecked--background--disabled);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-unchecked--border-color--disabled);\n    }\n  }\n\n  :host(.checked.disabled),\n  :host([indeterminate].disabled) {\n    button {\n      background-color: var(--theme-radiobtn-checked--background--disabled);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-checked--border-color--disabled);\n    }\n  }\n\n  ix-typography {\n    margin-top: 0.125rem;\n  }\n}\n\n@mixin radio-variant($selector) {\n  :host(#{$selector}:not(.disabled)) {\n    button {\n      @content;\n    }\n  }\n\n  :host(#{$selector}) {\n    button {\n      background-color: var(--theme-radiobtn-unchecked--background);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-unchecked--border-color);\n    }\n  }\n\n  :host(#{$selector}:hover) {\n    button {\n      background-color: var(--theme-radiobtn-unchecked--background--hover);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-unchecked--border-color--hover);\n    }\n  }\n\n  :host(#{$selector}:active) {\n    button {\n      background-color: var(--theme-radiobtn-unchecked--background--active);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-unchecked--border-color--active);\n    }\n  }\n\n  :host(#{$selector}.checked),\n  :host(#{$selector}[indeterminate]) {\n    button {\n      background-color: var(--theme-radiobtn-checked--background);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-checked--border-color);\n    }\n  }\n\n  :host(#{$selector}.checked:hover),\n  :host(#{$selector}[indeterminate]:hover) {\n    button {\n      background-color: var(--theme-radiobtn-checked--background--hover);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-checked--border-color--hover);\n    }\n  }\n\n  :host(#{$selector}.checked:active),\n  :host(#{$selector}[indeterminate]:active) {\n    button {\n      background-color: var(--theme-radiobtn-checked--background--active);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-checked--border-color--active);\n    }\n  }\n\n  :host(#{$selector}.disabled) {\n    button {\n      background-color: var(--theme-radiobtn-unchecked--background--disabled);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-unchecked--border-color--disabled);\n    }\n  }\n\n  :host(#{$selector}.checked.disabled),\n  :host(#{$selector}[indeterminate].disabled) {\n    button {\n      background-color: var(--theme-radiobtn-checked--background--disabled);\n      border: var(--theme-radiobtn--border-thickness) solid\n        var(--theme-radiobtn-checked--border-color--disabled);\n    }\n  }\n}\n\n@mixin define-radio-vars($state, $type) {\n  --theme-radiobtn-#{$state}--background: var(--theme-radiobtn-#{$state}--background--#{$type});\n  --theme-radiobtn-#{$state}--background--hover: var(--theme-radiobtn-#{$state}--background--#{$type}--hover);\n  --theme-radiobtn-#{$state}--background--active: var(--theme-radiobtn-#{$state}--background--#{$type}--active);\n\n  --theme-radiobtn-#{$state}--border-color: var(--theme-radiobtn-#{$state}--border-color--#{$type});\n  --theme-radiobtn-#{$state}--border-color--hover: var(--theme-radiobtn-#{$state}--border-color--#{$type}--hover);\n  --theme-radiobtn-#{$state}--border-color--active: var(--theme-radiobtn-#{$state}--border-color--#{$type}--active);\n}\n\n@include radio-base();\n@include radio-variant(\n  $selector: '.ix-info',\n) {\n  @include define-radio-vars('unchecked', 'info');\n  @include define-radio-vars('checked', 'info');\n  @include define-radio-vars('mixed', 'info');\n}\n\n@include radio-variant(\n  $selector: '.ix-warning',\n) {\n  @include define-radio-vars('unchecked', 'warning');\n  @include define-radio-vars('checked', 'warning');\n  @include define-radio-vars('mixed', 'warning');\n}\n\n@include radio-variant(\n  $selector: '.ix-invalid--required',\n) {\n  @include define-radio-vars('unchecked', 'invalid');\n  @include define-radio-vars('checked', 'invalid');\n  @include define-radio-vars('mixed', 'invalid');\n}\n\n@include radio-variant(\n  $selector: '.ix-invalid',\n) {\n  @include define-radio-vars('unchecked', 'invalid');\n  @include define-radio-vars('checked', 'invalid');\n  @include define-radio-vars('mixed', 'invalid');\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  AttachInternals,\n  Component,\n  Event,\n  EventEmitter,\n  Host,\n  Prop,\n  Watch,\n  h,\n  Method,\n  Element,\n} from '@stencil/core';\nimport { makeRef } from '../utils/make-ref';\nimport {\n  ClassMutationObserver,\n  createClassMutationObserver,\n  IxFormComponent,\n} from '../utils/input';\nimport { a11yBoolean } from '../utils/a11y';\n\n/**\n * @form-ready\n */\n@Component({\n  tag: 'ix-radio',\n  styleUrl: 'radio.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class Radio implements IxFormComponent<string> {\n  @Element() hostElement!: HTMLIxRadioElement;\n  @AttachInternals() formInternals!: ElementInternals;\n\n  /**\n   * Name of the radio component\n   */\n  @Prop({ reflect: true }) name?: string;\n\n  /**\n   * Value of the radio component\n   */\n  @Prop({ reflect: true }) value?: string;\n\n  /**\n   * Label for the radio component\n   */\n  @Prop() label?: string;\n\n  /**\n   * Disabled state of the radio component\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Checked state of the radio component\n   */\n  @Prop({ reflect: true, mutable: true }) checked: boolean = false;\n\n  /**\n   * Requires the radio component and its group to be checked for the form to be submittable\n   *\n   * @since 3.0.0\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /**\n   * Event emitted when the checked state of the radio changes\n   */\n  @Event() checkedChange!: EventEmitter<boolean>;\n\n  /**\n   * Event emitted when the value of the radio changes\n   */\n  @Event() valueChange!: EventEmitter<string>;\n\n  /**\n   * Event emitted when the radio is blurred\n   */\n  @Event() ixBlur!: EventEmitter<void>;\n\n  private classMutationObserver?: ClassMutationObserver;\n\n  private readonly inputRef = makeRef<HTMLInputElement>((radiobuttonRef) => {\n    radiobuttonRef.checked = this.checked;\n  });\n\n  private setCheckedState(newChecked: boolean) {\n    if (this.checked) {\n      return;\n    }\n    const result = this.checkedChange.emit(newChecked);\n    if (result.defaultPrevented) {\n      return;\n    }\n\n    this.checked = newChecked;\n  }\n\n  @Watch('checked')\n  async onCheckedChange() {\n    const radiobuttonRef = await this.inputRef.waitForCurrent();\n    radiobuttonRef.checked = this.checked;\n\n    this.updateFormInternalValue();\n  }\n\n  @Watch('value')\n  onValueChange() {\n    this.valueChange.emit(this.value);\n  }\n\n  connectedCallback(): void {\n    const parent = this.hostElement.closest('ix-radio-group');\n    if (parent) {\n      this.classMutationObserver = createClassMutationObserver(parent, () => {\n        this.hostElement.classList.toggle(\n          'ix-invalid--required',\n          parent.classList.contains('ix-invalid--required')\n        );\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    if (this.classMutationObserver) {\n      this.classMutationObserver.destroy();\n    }\n  }\n\n  componentWillLoad() {\n    this.updateFormInternalValue();\n  }\n\n  updateFormInternalValue() {\n    if (this.checked) {\n      this.formInternals.setFormValue(this.value ?? 'on');\n    } else {\n      this.formInternals.setFormValue(null);\n    }\n  }\n\n  /** @internal */\n  @Method()\n  hasValidValue(): Promise<boolean> {\n    return Promise.resolve(this.checked);\n  }\n\n  /** @internal */\n  @Method()\n  getAssociatedFormElement(): Promise<HTMLFormElement | null> {\n    return Promise.resolve(this.formInternals.form);\n  }\n\n  render() {\n    return (\n      <Host\n        aria-checked={a11yBoolean(this.checked)}\n        aria-disabled={a11yBoolean(this.disabled)}\n        role=\"radio\"\n        class={{\n          disabled: this.disabled,\n          checked: this.checked,\n        }}\n        onBlur={() => this.ixBlur.emit()}\n      >\n        <label>\n          <input\n            aria-checked={a11yBoolean(this.checked)}\n            required={this.required}\n            disabled={this.disabled}\n            checked={this.checked}\n            name={this.name}\n            ref={this.inputRef}\n            type=\"radio\"\n            onChange={() => {\n              const ref = this.inputRef.current;\n              if (ref) {\n                this.setCheckedState(ref.checked);\n              }\n            }}\n          />\n          <button\n            disabled={this.disabled}\n            class={{\n              checked: this.checked,\n            }}\n            onClick={() => this.setCheckedState(!this.checked)}\n          >\n            <div\n              class=\"checkmark\"\n              style={{ visibility: this.checked ? 'visible' : 'hidden' }}\n            ></div>\n          </button>\n          <ix-typography\n            format=\"label\"\n            textColor={this.disabled ? 'weak' : 'std'}\n          >\n            {this.label}\n            <slot></slot>\n          </ix-typography>\n        </label>\n      </Host>\n    );\n  }\n}\n"],"version":3}