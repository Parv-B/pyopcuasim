{"file":"ix-tree.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/utils/lazy-list/lazy.ts","src/components/tree/tree.css?tag=ix-tree&encapsulation=shadow","src/components/tree/tree.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Manually forked from https://github.com/tbranyen/hyperlist to remove\n// features a direct document calls\n//\n// Hyperlist is licensed MIT. https://github.com/tbranyen/hyperlist\n\nexport type VirtualListConfig = {\n  applyPatch?: (\n    element: HTMLElement,\n    fragment: DocumentFragment | DocumentFragment[]\n  ) => void;\n  overrideScrollPosition?: () => void;\n  rowClassName?: string;\n  scrollContainer?: HTMLElement;\n  width: string;\n  height: string;\n  afterRender?: () => void;\n  scrollerTagName?: string;\n  scroller?: HTMLElement;\n  useFragment?: boolean;\n  generate?: (index: number) => HTMLElement;\n  total?: number;\n  itemHeight?: number;\n  horizontal?: boolean;\n};\n\nconst isNumber = (input: unknown) => !Number.isNaN(Number(input));\n\nconst addClass = (element: HTMLElement, className: string) => {\n  element.classList.add(className);\n};\n\nexport class VirtualList {\n  _config!: VirtualListConfig;\n  _lastRepaint: null;\n  _maxElementHeight: number;\n  _renderAnimationFrame!: number;\n  _averageHeight!: number;\n\n  static readonly defaultConfig: VirtualListConfig = {\n    width: '100%',\n    height: '100%',\n  };\n  _element: any;\n  _scroller: any;\n  _itemHeights!: number[];\n  _containerSize!: number | string;\n  _scrollPaddingBottom!: number;\n  _scrollPaddingTop!: number;\n  _scrollHeight: any;\n  _itemPositions: any;\n  _screenItemsLen!: number;\n  _lastFrom!: number;\n  _cachedItemsLen: any;\n\n  static create(\n    element: HTMLElement,\n    userProvidedConfig: VirtualListConfig = VirtualList.defaultConfig\n  ) {\n    return new VirtualList(element, userProvidedConfig);\n  }\n\n  static mergeStyle(element: HTMLElement, style: any) {\n    for (let i in style) {\n      if (element.style[i as any] !== style[i]) {\n        element.style[i as any] = style[i];\n      }\n    }\n  }\n\n  static getMaxBrowserHeight() {\n    // Create two elements, the wrapper is `1px` tall and is transparent and\n    // positioned at the top of the page. Inside that is an element that gets\n    // set to 1 billion pixels. Then reads the max height the browser can\n    // calculate.\n    const wrapper = document.createElement('div');\n    const fixture = document.createElement('div');\n\n    // As said above, these values get set to put the fixture elements into the\n    // right visual state.\n    VirtualList.mergeStyle(wrapper, {\n      position: 'absolute',\n      height: '1px',\n      opacity: 0,\n    });\n    VirtualList.mergeStyle(fixture, { height: '1e7px' });\n\n    // Add the fixture into the wrapper element.\n    wrapper.appendChild(fixture);\n\n    // Apply to the page, the values won't kick in unless this is attached.\n    document.body.appendChild(wrapper);\n\n    // Get the maximum element height in pixels.\n    const maxElementHeight = fixture.offsetHeight;\n\n    // Remove the element immediately after reading the value.\n    document.body.removeChild(wrapper);\n\n    return maxElementHeight;\n  }\n\n  constructor(element: HTMLElement, userProvidedConfig: VirtualListConfig) {\n    this._lastRepaint = null;\n    this._maxElementHeight = VirtualList.getMaxBrowserHeight();\n\n    this.refresh(element, userProvidedConfig);\n\n    const config = this._config;\n\n    // Create internal render loop.\n    const render = () => {\n      const scrollTop = this._getScrollPosition();\n      const lastRepaint = this._lastRepaint;\n\n      this._renderAnimationFrame = window.requestAnimationFrame(render);\n\n      if (scrollTop === lastRepaint) {\n        return;\n      }\n\n      const diff = lastRepaint ? scrollTop - lastRepaint : 0;\n      if (!lastRepaint || diff < 0 || diff > this._averageHeight) {\n        let rendered = this._renderChunk();\n\n        this._lastRepaint = scrollTop;\n\n        if (rendered !== false && typeof config.afterRender === 'function') {\n          config.afterRender();\n        }\n      }\n    };\n\n    render();\n  }\n\n  destroy() {\n    window.cancelAnimationFrame(this._renderAnimationFrame);\n  }\n\n  refresh(\n    element: HTMLElement,\n    userProvidedConfig: VirtualListConfig = VirtualList.defaultConfig\n  ) {\n    this._config = userProvidedConfig;\n\n    if (!element || element.nodeType !== 1) {\n      throw new Error('HyperList requires a valid DOM Node container');\n    }\n\n    this._element = element;\n\n    const config = this._config as any;\n\n    const scroller =\n      this._scroller ||\n      config.scroller ||\n      document.createElement(config.scrollerTagName || 'tr');\n\n    // Default configuration option `useFragment` to `true`.\n    if (typeof config.useFragment !== 'boolean') {\n      this._config.useFragment = true;\n    }\n\n    if (!config.generate) {\n      throw new Error('Missing required `generate` function');\n    }\n\n    if (!isNumber(config.total)) {\n      throw new Error('Invalid required `total` value, expected number');\n    }\n\n    if (!Array.isArray(config.itemHeight) && !isNumber(config.itemHeight)) {\n      throw new Error(\n        `\n        Invalid required \\`itemHeight\\` value, expected number or array\n      `.trim()\n      );\n    } else if (isNumber(config.itemHeight)) {\n      this._itemHeights = Array(config.total).fill(config.itemHeight);\n    } else {\n      this._itemHeights = [config.itemHeight as any];\n    }\n\n    // Width and height should be coerced to string representations. Either in\n    // `%` or `px`.\n    Object.keys(VirtualList.defaultConfig)\n      .filter((prop) => prop in config)\n      .forEach((prop) => {\n        const value = config[prop as any];\n        const isValueNumber = isNumber(value);\n\n        if (value && typeof value !== 'string' && typeof value !== 'number') {\n          let msg = `Invalid optional \\`${prop}\\`, expected string or number`;\n          throw new Error(msg);\n        } else if (isValueNumber) {\n          config[prop] = `${value}px`;\n        }\n      });\n\n    const isHorizontal = Boolean(config.horizontal);\n    const value = config[isHorizontal ? 'width' : 'height'];\n\n    if (value) {\n      const isValueNumber = isNumber(value);\n      const isValuePercent = isValueNumber ? false : value.slice(-1) === '%';\n      // Compute the containerHeight as number\n      const numberValue = isValueNumber\n        ? parseInt(value, 10)\n        : parseInt(value.replace(/px|%/, ''), 10);\n      const innerSize = window[isHorizontal ? 'innerWidth' : 'innerHeight'];\n\n      if (isValuePercent) {\n        this._containerSize = (innerSize * numberValue) / 100;\n      } else {\n        this._containerSize = isNumber(value) ? value : numberValue;\n      }\n    }\n\n    const scrollContainer = config.scrollContainer;\n    const scrollerHeight = config.itemHeight * config.total;\n    const maxElementHeight = this._maxElementHeight;\n\n    if (scrollerHeight > maxElementHeight) {\n      console.warn(\n        [\n          'HyperList: The maximum element height',\n          maxElementHeight + 'px has',\n          'been exceeded; please reduce your item height.',\n        ].join(' ')\n      );\n    }\n\n    // Decorate the container element with styles that will match\n    // the user supplied configuration.\n    const elementStyle = {\n      width: `${config.width}`,\n      height: scrollContainer ? `${scrollerHeight}px` : `${config.height}`,\n      overflow: scrollContainer ? 'none' : 'auto',\n      position: 'relative',\n    };\n\n    VirtualList.mergeStyle(element, elementStyle);\n\n    if (scrollContainer) {\n      VirtualList.mergeStyle(config.scrollContainer, { overflow: 'auto' });\n    }\n\n    const scrollerStyle = {\n      opacity: '0',\n      position: 'absolute',\n      [isHorizontal ? 'height' : 'width']: '1px',\n      [isHorizontal ? 'width' : 'height']: `${scrollerHeight}px`,\n    };\n\n    VirtualList.mergeStyle(scroller, scrollerStyle);\n\n    // Only append the scroller element once.\n    if (!this._scroller) {\n      element.appendChild(scroller);\n    }\n\n    const padding = this._computeScrollPadding();\n    this._scrollPaddingBottom = padding.bottom;\n    this._scrollPaddingTop = padding.top;\n\n    // Set the scroller instance.\n    this._scroller = scroller;\n    this._scrollHeight = this._computeScrollHeight();\n\n    // Reuse the item positions if refreshed, otherwise set to empty array.\n    this._itemPositions = this._itemPositions || Array(config.total).fill(0);\n\n    // Each index in the array should represent the position in the DOM.\n    this._computePositions(0);\n\n    // Render after refreshing. Force render if we're calling refresh manually.\n    this._renderChunk(this._lastRepaint !== null);\n\n    if (typeof config.afterRender === 'function') {\n      config.afterRender();\n    }\n  }\n\n  _getRow(i: number) {\n    const config = this._config as any;\n    let item = config.generate(i) as any;\n    let height = item.height;\n\n    if (height !== undefined && isNumber(height)) {\n      item = item.element;\n\n      // The height isn't the same as predicted, compute positions again\n      if (height !== this._itemHeights[i]) {\n        this._itemHeights[i] = height;\n        this._computePositions(i);\n        this._scrollHeight = this._computeScrollHeight();\n      }\n    } else {\n      height = this._itemHeights[i];\n    }\n\n    if (!item || item.nodeType !== 1) {\n      throw new Error(`Generator did not return a DOM Node for index: ${i}`);\n    }\n\n    addClass(item, config.rowClassName || 'vrow');\n\n    const top = this._itemPositions[i] + this._scrollPaddingTop;\n\n    VirtualList.mergeStyle(item, {\n      position: 'absolute',\n      [config.horizontal ? 'left' : 'top']: `${top}px`,\n    });\n\n    return item;\n  }\n\n  _getScrollPosition() {\n    const config = this._config;\n\n    if (typeof config.overrideScrollPosition === 'function') {\n      return config.overrideScrollPosition();\n    }\n\n    return this._element[config.horizontal ? 'scrollLeft' : 'scrollTop'];\n  }\n\n  _renderChunk(force: boolean = false) {\n    const config = this._config;\n    const element = this._element;\n    const scrollTop = this._getScrollPosition();\n    const total: number = config.total!;\n\n    let from = this._getFrom(scrollTop) - 1;\n\n    if (from < 0 || from - this._screenItemsLen < 0) {\n      from = 0;\n    }\n\n    if (!force && this._lastFrom === from) {\n      return false;\n    }\n\n    this._lastFrom = from;\n\n    let to = from + this._cachedItemsLen;\n\n    if (to > total || to + this._cachedItemsLen > total) {\n      to = total;\n    }\n\n    // Append all the new rows in a document fragment that we will later append\n    // to the parent node\n    const fragment: any = config.useFragment\n      ? document.createDocumentFragment()\n      : [\n          // Sometimes you'll pass fake elements to this tool and Fragments require\n          // real elements.\n        ];\n\n    // The element that forces the container to scroll.\n    const scroller = this._scroller;\n\n    // Keep the scroller in the list of children.\n    fragment[config.useFragment ? 'appendChild' : 'push'](scroller);\n\n    for (let i = from; i < to; i++) {\n      let row = this._getRow(i);\n\n      fragment[config.useFragment ? 'appendChild' : 'push'](row);\n    }\n\n    if (config.applyPatch) {\n      return config.applyPatch(element, fragment);\n    }\n\n    element.innerHTML = '';\n    element.appendChild(fragment);\n  }\n\n  _computePositions(from = 1) {\n    const config = this._config;\n    const total = config.total!;\n\n    if (from < 1) {\n      from = 1;\n    }\n\n    for (let i = from; i < total; i++) {\n      this._itemPositions[i] =\n        this._itemHeights[i - 1] + this._itemPositions[i - 1];\n    }\n  }\n\n  _computeScrollHeight() {\n    const config = this._config as any;\n    const isHorizontal = Boolean(config.horizontal);\n    const total = config.total;\n    const scrollHeight =\n      this._itemHeights.reduce((a, b) => a + b, 0) +\n      this._scrollPaddingBottom +\n      this._scrollPaddingTop;\n\n    VirtualList.mergeStyle(this._scroller, {\n      opacity: 0,\n      position: 'absolute',\n      top: '0px',\n      [isHorizontal ? 'height' : 'width']: '1px',\n      [isHorizontal ? 'width' : 'height']: `${scrollHeight}px`,\n    });\n\n    // Calculate the height median\n    const sortedItemHeights = this._itemHeights.slice(0).sort((a, b) => a - b);\n    const middle = Math.floor(total / 2);\n    const averageHeight =\n      total % 2 === 0\n        ? (sortedItemHeights[middle] + sortedItemHeights[middle - 1]) / 2\n        : sortedItemHeights[middle];\n\n    const clientProp = isHorizontal ? 'clientWidth' : 'clientHeight';\n    const element = config.scrollContainer\n      ? config.scrollContainer\n      : this._element;\n    const containerHeight = element[clientProp]\n      ? element[clientProp]\n      : this._containerSize;\n    this._screenItemsLen = Math.ceil(containerHeight / averageHeight);\n    this._containerSize = containerHeight;\n\n    // Cache 3 times the number of items that fit in the container viewport.\n    this._cachedItemsLen = Math.max(\n      this._cachedItemsLen || 0,\n      this._screenItemsLen * 3\n    );\n    this._averageHeight = averageHeight;\n\n    return scrollHeight;\n  }\n\n  _computeScrollPadding() {\n    const config = this._config;\n    const isHoriz = Boolean(config.horizontal);\n    const styles = window.getComputedStyle(this._element);\n\n    const padding = (location: string) => {\n      const cssValue = styles.getPropertyValue(`padding-${location}`);\n      return parseInt(cssValue, 10) || 0;\n    };\n\n    if (isHoriz) {\n      return {\n        bottom: padding('right'),\n        top: padding('left'),\n      };\n    } else {\n      return {\n        bottom: padding('bottom'),\n        top: padding('top'),\n      };\n    }\n  }\n\n  _getFrom(scrollTop: number) {\n    let i = 0;\n\n    while (this._itemPositions[i] < scrollTop) {\n      i++;\n    }\n\n    return i;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n:host {\n  display: block;\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  Watch,\n} from '@stencil/core';\nimport { VirtualList, VirtualListConfig } from './../utils/lazy-list';\nimport { renderDefaultItem } from '../tree-item/default-tree-item';\nimport {\n  TreeContext,\n  TreeItem,\n  TreeItemContext,\n  TreeItemVisual,\n  TreeModel,\n  UpdateCallback,\n} from './tree-model';\nimport { dropdownController } from '../dropdown/dropdown-controller';\n\n@Component({\n  tag: 'ix-tree',\n  styleUrl: 'tree.css',\n  shadow: true,\n})\nexport class Tree {\n  @Element() hostElement!: HTMLIxTreeElement;\n\n  /**\n   * Initial root element will not be rendered\n   */\n  @Prop() root!: string;\n\n  /**\n   * Tree model\n   */\n  @Prop() model: TreeModel<any> = {};\n\n  /**\n   * Render function of tree items\n   */\n  @Prop() renderItem?: <T = any>(\n    index: number,\n    data: T,\n    dataList: Array<T>,\n    context: TreeContext,\n    update: (callback: UpdateCallback) => void\n  ) => HTMLElement;\n\n  /**\n   * Selection and collapsed state management\n   */\n  @Prop({ mutable: true }) context: TreeContext = {};\n\n  /**\n   * Enable to toggle items by click on the item\n   * @since 3.0.0\n   */\n  @Prop() toggleOnItemClick?: boolean;\n\n  /**\n   * Context changed\n   */\n  @Event() contextChange!: EventEmitter<TreeContext>;\n\n  /**\n   * Node toggled event\n   */\n  @Event() nodeToggled!: EventEmitter<{ id: string; isExpanded: boolean }>;\n\n  /**\n   * Node clicked event\n   */\n  @Event() nodeClicked!: EventEmitter<string>;\n\n  /**\n   * Emits removed nodes\n   */\n  @Event() nodeRemoved!: EventEmitter<any>;\n\n  private hyperlist?: VirtualList;\n\n  private readonly updates = new Map<string, UpdateCallback>();\n  private observer!: MutationObserver;\n  private hasFirstRender = false;\n\n  private updatePadding(element: HTMLElement, item: TreeItemVisual<unknown>) {\n    element.style.paddingLeft = item.level + 'rem';\n  }\n\n  private getVirtualizerOptions(): VirtualListConfig {\n    const list = this.buildTreeList(this.model[this.root]);\n\n    return {\n      width: '100%',\n      height: '100%',\n      itemHeight: 32,\n      total: list.length,\n      generate: (index: number) => {\n        const item = list[index];\n\n        const renderedTreeItem = this.hostElement.querySelector(\n          `[data-tree-node-id=\"${item.id}\"]`\n        ) as HTMLIxTreeItemElement;\n\n        const context = this.getContext(item.id);\n\n        if (renderedTreeItem) {\n          renderedTreeItem.hasChildren = item.hasChildren;\n          renderedTreeItem.context = { ...context };\n\n          if (this.updates.has(item.id)) {\n            const doUpdate = this.updates.get(item.id);\n\n            if (doUpdate) {\n              doUpdate(item, { ...this.context });\n            }\n          }\n\n          this.updatePadding(renderedTreeItem, item);\n          return renderedTreeItem;\n        }\n\n        const update = (callback: UpdateCallback) => {\n          this.updates.set(item.id, callback);\n        };\n\n        let innerElement: HTMLElement | null = null;\n        if (this.renderItem) {\n          innerElement = this.renderItem(\n            index,\n            item,\n            list,\n            { ...this.context },\n            update\n          );\n        }\n\n        if (innerElement === null) {\n          innerElement = renderDefaultItem(item, context, update);\n        }\n\n        const el = innerElement;\n        el.setAttribute('data-tree-node-id', item.id);\n        el.style.paddingRight = '1rem';\n        this.updatePadding(el, item);\n\n        return el;\n      },\n    };\n  }\n\n  private setContext(id: string, context: TreeItemContext) {\n    this.context = {\n      ...this.context,\n      [id]: context,\n    };\n\n    this.contextChange.emit(this.context);\n  }\n\n  private getContext(id: string): TreeItemContext {\n    if (!this.context) {\n      return {\n        isExpanded: false,\n        isSelected: false,\n      };\n    }\n    if (!this.context[id]) {\n      this.context[id] = {\n        isExpanded: false,\n        isSelected: false,\n      };\n    }\n    return this.context[id];\n  }\n\n  private buildTreeList(\n    root: TreeItem<any>,\n    level: number = 0\n  ): TreeItemVisual<any>[] {\n    const itemList: TreeItemVisual<any>[] = [];\n\n    if (root?.hasChildren) {\n      const newLevel = level + 1;\n      root.children.forEach((id: string) => {\n        const item = this.model[id];\n        const context = this.getContext(id);\n        itemList.push({ ...item, level });\n        if (item.hasChildren && context.isExpanded) {\n          itemList.push(...this.buildTreeList(item, newLevel));\n        }\n      });\n    }\n\n    return itemList;\n  }\n\n  componentDidLoad() {\n    this.initList();\n\n    this.observer = new MutationObserver((records) => {\n      let removed: unknown[] = [];\n\n      records.forEach((record) => {\n        removed = [...removed, ...Array.from(record.removedNodes)];\n\n        record.addedNodes.forEach((an) => {\n          const index = removed.indexOf(an);\n          if (index >= 0) {\n            removed.splice(index, 1);\n          }\n        });\n      });\n\n      this.nodeRemoved.emit(removed);\n    });\n\n    this.observer.observe(this.hostElement, {\n      childList: true,\n    });\n  }\n\n  componentWillRender() {\n    this.hasFirstRender = true;\n\n    if (this.isListInitialized()) {\n      this.refreshList();\n    } else {\n      this.initList();\n    }\n  }\n\n  connectedCallback() {\n    if (this.hasFirstRender) {\n      this.initList();\n    }\n  }\n\n  disconnectedCallback() {\n    this.hyperlist?.destroy();\n    this.observer?.disconnect();\n  }\n\n  @Watch('model')\n  modelChange() {\n    if (this.hasFirstRender && !this.isListInitialized()) {\n      this.initList();\n    }\n  }\n\n  private isListInitialized() {\n    //@ts-ignore\n    const itemPositions = this.hyperlist?._itemPositions;\n\n    return (\n      itemPositions !== undefined &&\n      itemPositions.length &&\n      !itemPositions?.some(\n        (item: number) => item === undefined || Number.isNaN(item)\n      )\n    );\n  }\n\n  private refreshList() {\n    if (this.hyperlist) {\n      this.hyperlist.refresh(this.hostElement, this.getVirtualizerOptions());\n    }\n  }\n\n  private initList() {\n    if (!this.model) {\n      return;\n    }\n\n    this.hyperlist?.destroy();\n    const config = this.getVirtualizerOptions();\n    this.hyperlist = new VirtualList(this.hostElement, config);\n  }\n\n  @Listen('toggle')\n  onToggle(event: CustomEvent) {\n    const { target } = event;\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!(target instanceof HTMLElement)) {\n      return;\n    }\n\n    const id = target.getAttribute('data-tree-node-id');\n    if (!id) {\n      return;\n    }\n\n    const item = this.model[id];\n    if (!item.hasChildren) {\n      return;\n    }\n\n    const context = this.getContext(id);\n    context.isExpanded = !context.isExpanded;\n    this.nodeToggled.emit({ id, isExpanded: context.isExpanded });\n    this.setContext(id, context);\n  }\n\n  onTreeItemClick(event: Event) {\n    const { target } = event;\n    if (!(target instanceof HTMLElement)) {\n      return;\n    }\n\n    const id = target.getAttribute('data-tree-node-id');\n    if (!id) {\n      return;\n    }\n\n    const item = this.model[id];\n    const path = event.composedPath();\n    const treeIndex = path.indexOf(this.hostElement);\n    const treePath = path.slice(0, treeIndex);\n    const hasTrigger = dropdownController.pathIncludesTrigger(treePath);\n\n    if (hasTrigger) {\n      return;\n    }\n\n    if (!event.defaultPrevented) {\n      Object.values(this.context).forEach((c) => (c.isSelected = false));\n      const context = this.getContext(id);\n      context.isSelected = true;\n      this.setContext(id, context);\n    }\n\n    if (this.toggleOnItemClick && item.hasChildren) {\n      const context = this.getContext(id);\n      context.isExpanded = !context.isExpanded;\n      this.nodeToggled.emit({\n        id: id,\n        isExpanded: context.isExpanded,\n      });\n      this.setContext(id, context);\n    }\n\n    this.nodeClicked.emit(id);\n  }\n\n  render() {\n    return (\n      <Host onClick={(event: Event) => this.onTreeItemClick(event)}>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"],"version":3}