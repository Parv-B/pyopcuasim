{"file":"p-DDHkNPby.js","mappings":";;AAAA;;;;;;;AAOG;;;;;;;;;;;;;AAIH,MAAM,WAAW,CAAA;AAAjB,IAAA,WAAA,GAAA;AACE,QAAA,wBAAA,CAAA,GAAA,CAAA,IAAA,EAAyC,IAAI,CAAC;QAC9C,6BAAoB,CAAA,GAAA,CAAA,IAAA,EAAA,IAAI,UAAU,EAAW,CAAC;AAC9C,QAAA,qBAAA,CAAA,GAAA,CAAA,IAAA,EAAY,KAAK,CAAC;;AAElB,IAAA,QAAQ,CAAC,WAA8B,EAAA;AACrC,QAAA,IAAI,sBAAA,CAAA,IAAI,EAAa,wBAAA,EAAA,GAAA,CAAA,EAAE;AACrB,YAAA,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC;YACpC;;AAEF,QAAA,sBAAA,CAAA,IAAI,EAAA,wBAAA,EAAgB,WAAW,EAAA,GAAA,CAAA;QAC/B,sBAAA,CAAA,IAAI,EAAa,wBAAA,EAAA,GAAA,CAAA,CAAC,gBAAgB,CAChC,cAAc,EACd,CAAC,KAA2B,KAAI;YAC9B,sBAAA,CAAA,IAAI,qCAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AAC3C,SAAC,CACF;;AAGI,IAAA,WAAW,CAAC,MAAe,EAAA;AAChC,QAAA,sBAAA,CAAA,IAAI,EAAA,qBAAA,EAAa,MAAM,EAAA,GAAA,CAAA;;AAGlB,IAAA,MAAM,IAAI,GAAA;AACf,QAAA,IAAI,sBAAA,CAAA,IAAI,EAAa,wBAAA,EAAA,GAAA,CAAA,EAAE;AACrB,YAAA,sBAAA,CAAA,IAAI,EAAa,wBAAA,EAAA,GAAA,CAAA,CAAC,UAAU,CAAC,IAAI,CAAC;AAClC,YAAA,OAAO,IAAI;;AAGb,QAAA,OAAO,KAAK;;AAGP,IAAA,MAAM,KAAK,GAAA;AAChB,QAAA,IAAI,sBAAA,CAAA,IAAI,EAAa,wBAAA,EAAA,GAAA,CAAA,EAAE;AACrB,YAAA,sBAAA,CAAA,IAAI,EAAa,wBAAA,EAAA,GAAA,CAAA,CAAC,UAAU,CAAC,KAAK,CAAC;AACnC,YAAA,OAAO,IAAI;;AAGb,QAAA,OAAO,KAAK;;AAGP,IAAA,MAAM,MAAM,GAAA;AACjB,QAAA,IAAI,sBAAA,CAAA,IAAI,EAAa,wBAAA,EAAA,GAAA,CAAA,EAAE;AACrB,YAAA,sBAAA,CAAA,IAAI,EAAA,wBAAA,EAAA,GAAA,CAAa,CAAC,UAAU,EAAE;AAC9B,YAAA,OAAO,IAAI;;AAGb,QAAA,OAAO,KAAK;;AAGd,IAAA,IAAI,aAAa,GAAA;QACf,OAAO,sBAAA,CAAA,IAAI,EAAA,wBAAA,EAAA,GAAA,CAAa;;AAG1B,IAAA,IAAI,YAAY,GAAA;QACd,OAAO,sBAAA,CAAA,IAAI,EAAA,6BAAA,EAAA,GAAA,CAAkB;;AAG/B,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,sBAAA,CAAA,IAAI,EAAA,qBAAA,EAAA,GAAA,CAAU;;AAExB;;AAEY,MAAA,cAAc,GAAG,IAAI,WAAW;;;;","names":[],"sources":["src/components/utils/menu-service/menu-service.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TypedEvent } from '../typed-event';\n\nclass MenuService {\n  #menuElement: HTMLIxMenuElement | null = null;\n  #menuExpandChange = new TypedEvent<boolean>();\n  #isPinned = false;\n\n  register(menuElement: HTMLIxMenuElement) {\n    if (this.#menuElement) {\n      console.warn('Menu already defined');\n      return;\n    }\n    this.#menuElement = menuElement;\n    this.#menuElement.addEventListener(\n      'expandChange',\n      (event: CustomEvent<boolean>) => {\n        this.#menuExpandChange.emit(event.detail);\n      }\n    );\n  }\n\n  public setIsPinned(pinned: boolean) {\n    this.#isPinned = pinned;\n  }\n\n  public async open() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu(true);\n      return true;\n    }\n\n    return false;\n  }\n\n  public async close() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu(false);\n      return true;\n    }\n\n    return false;\n  }\n\n  public async toggle() {\n    if (this.#menuElement) {\n      this.#menuElement.toggleMenu();\n      return true;\n    }\n\n    return false;\n  }\n\n  get nativeElement() {\n    return this.#menuElement;\n  }\n\n  get expandChange() {\n    return this.#menuExpandChange;\n  }\n\n  get isPinned() {\n    return this.#isPinned;\n  }\n}\n\nexport const menuController = new MenuService();\n"],"version":3}