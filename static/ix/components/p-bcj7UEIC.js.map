{"file":"p-bcj7UEIC.js","mappings":"AAgBM,SAAU,OAAO,CACrB,sBAA6C,EAAA;IAE7C,IAAI,OAAO,GAA2B,SAAS;AAC/C,IAAA,IAAI,cAAc,GAAG,IAAI,OAAO,CAAI,CAAC,GAAG,MAAM,OAAO,GAAG,GAAG,CAAC,CAAC;IAC7D,IAAI,OAAO,GAAkB,SAAS;AAEtC,IAAA,MAAM,cAAc,GAAG,CAAC,GAAkB,KAAI;AAC5C,QAAA,IAAI,GAAG,KAAK,SAAS,EAAE;YACrB;;AAEF,QAAA,OAAO,GAAI,cAA6B,CAAC,OAAO,GAAG,GAAG;AACtD,QAAA,sBAAsB,aAAtB,sBAAsB,KAAA,MAAA,GAAA,MAAA,GAAtB,sBAAsB,CAAG,GAAG,CAAC;AAC7B,QAAA,OAAO,aAAP,OAAO,KAAA,MAAA,GAAA,MAAA,GAAP,OAAO,CAAG,GAAG,CAAC;AAChB,KAAC;AAED,IAAA,cAAc,CAAC,OAAO,GAAG,OAAmB;AAE5C,IAAA,cAAc,CAAC,cAAc,GAAG,YAAW;AACzC,QAAA,MAAM,cAAc;AACpB,QAAA,OAAO,OAAO;AAChB,KAAC;AAED,IAAA,OAAO,cAA4B;AACrC;;;;","names":[],"sources":["src/components/utils/make-ref.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport type MakeRef<T> = {\n  (ref: T | undefined | null): void;\n  current: T | null;\n  waitForCurrent(): Promise<T>;\n};\n\ntype Resolve<T> = (value: T) => void;\n\nexport function makeRef<T>(\n  currentChangedCallback?: (element: T) => void\n): MakeRef<T> {\n  let resolve: Resolve<T> | undefined = undefined;\n  let currentPromise = new Promise<T>((res) => (resolve = res));\n  let current: T | undefined = undefined;\n\n  const setRefFunction = (ref: T | undefined) => {\n    if (ref === undefined) {\n      return;\n    }\n    current = (setRefFunction as MakeRef<T>).current = ref;\n    currentChangedCallback?.(ref);\n    resolve?.(ref);\n  };\n\n  setRefFunction.current = current as T | null;\n\n  setRefFunction.waitForCurrent = async () => {\n    await currentPromise;\n    return current;\n  };\n\n  return setRefFunction as MakeRef<T>;\n}\n"],"version":3}