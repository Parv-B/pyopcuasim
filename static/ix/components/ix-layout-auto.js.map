{"file":"ix-layout-auto.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/layout-auto/layout-auto.scss?tag=ix-layout-auto&encapsulation=shadow","src/components/layout-auto/layout-auto.tsx"],"sourcesContent":[":host {\n  display: block;\n  position: relative;\n  margin: 0 0.75rem;\n\n  --ix-layout-grid-gap: 1.5rem;\n\n  .container {\n    display: flex;\n    align-items: stretch;\n    flex-wrap: wrap;\n    gap: var(--ix-layout-grid-gap);\n  }\n\n  ::slotted(*) {\n    flex-grow: 0;\n    flex-shrink: 0;\n  }\n}\n","import { Component, Element, Host, Prop, Watch, h } from '@stencil/core';\nimport { IxComponent } from '../utils/internal';\n\n@Component({\n  tag: 'ix-layout-auto',\n  styleUrl: 'layout-auto.scss',\n  shadow: true,\n})\nexport class LayoutForm implements IxComponent {\n  @Element() hostElement!: HTMLIxLayoutAutoElement;\n\n  /**\n   * Defines the layout of the form.\n   */\n  @Prop() layout: {\n    minWidth: string;\n    columns: number;\n  }[] = [\n    { minWidth: '0', columns: 1 },\n    { minWidth: '48em', columns: 2 },\n  ];\n\n  private mediaQueryList: {\n    mediaQuery: MediaQueryList;\n    layout: {\n      minWidth: string;\n      columns: number;\n    };\n  }[] = [];\n\n  private readonly observer = new MutationObserver(() =>\n    this.calculateGridTemplateColumns()\n  );\n\n  private readonly resizeObserver = new ResizeObserver(() => {\n    this.calculateGridTemplateColumns();\n  });\n\n  connectedCallback(): void {\n    this.observer.observe(this.hostElement, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-colspan'],\n    });\n    this.resizeObserver.observe(this.hostElement);\n\n    this.calculateGridTemplateColumns();\n  }\n\n  componentWillLoad(): void | Promise<void> {\n    this.calculateGridTemplateColumns();\n  }\n\n  disconnectedCallback(): void {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  @Watch('layout')\n  updateMediaQueryList() {\n    this.mediaQueryList = [];\n    this.layout.forEach((layout) => {\n      const mediaQuery = window.matchMedia(`(min-width: ${layout.minWidth})`);\n      this.mediaQueryList.push({\n        mediaQuery,\n        layout,\n      });\n    });\n  }\n\n  private parseNumber(number: string | null) {\n    if (!number) {\n      return 1;\n    }\n\n    const result = parseInt(number);\n    if (isNaN(result)) {\n      return 1;\n    }\n\n    return result;\n  }\n\n  private calculateGridTemplateColumns() {\n    this.updateMediaQueryList();\n\n    let layoutColumns = 1;\n    let columnSpacing = 'var(--ix-layout-grid-gap)';\n\n    this.mediaQueryList.forEach((mediaQuery) => {\n      if (mediaQuery.mediaQuery.matches) {\n        layoutColumns = mediaQuery.layout.columns;\n      }\n    });\n\n    let column = 0;\n    Array.from(\n      this.hostElement.children as HTMLCollectionOf<HTMLElement>\n    ).forEach((child) => {\n      let colspan = this.parseNumber(child.getAttribute('data-colspan'));\n      colspan = Math.min(colspan, layoutColumns);\n      const childRatio = colspan / layoutColumns;\n\n      child.style.width = `calc(${childRatio * 99.9}% - ${\n        1 - childRatio\n      } * ${columnSpacing})`;\n\n      if (column + colspan > layoutColumns) {\n        column = 0;\n      }\n\n      column = (column + colspan) % layoutColumns;\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"container\">\n          <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}