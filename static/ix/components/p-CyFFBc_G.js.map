{"file":"p-CyFFBc_G.js","mappings":";;;AAUgB,SAAA,QAAQ,CACtB,IAAO,EACP,KAAa,EAAA;AAEb,IAAA,IAAI,SAAwC;AAE5C,IAAA,OAAO,SAAS,SAAS,CAAC,GAAG,IAAmB,EAAA;QAC9C,YAAY,CAAC,SAAS,CAAC;AAEvB,QAAA,SAAS,GAAG,UAAU,CAAC,MAAK;AAC1B,YAAA,IAAI,CAAC,GAAG,IAAI,CAAC;SACd,EAAE,KAAK,CAAC;AACX,KAAC;AACH;;;;;;;;;;;;;;ACXA,MAAM,wBAAwB,CAAA;AAS5B,IAAA,WAAA,GAAA;;AAPA,QAAA,8CAAA,CAAA,GAAA,CAAA,IAAA,EAAsC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACzD,kDAA4B,CAAA,GAAA,CAAA,IAAA,EAAA,IAAI,UAAU,EAAc,CAAC;AACzD,QAAA,oCAAA,CAAA,GAAA,CAAA,IAAA,EAA0B,IAAI,CAAC;AAE/B,QAAA,4CAAA,CAAA,GAAA,CAAA,IAAA,EAAsB,IAAI,CAAC;AAC3B,QAAA,IAAA,CAAA,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;AAGxD,QAAA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AACjC,YAAA,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpE,IAAI,CAAC,iBAAiB,EAAE;;;AAI5B,IAAA,IAAI,UAAU,GAAA;QACZ,OAAO,sBAAA,CAAA,IAAI,EAAA,oCAAA,EAAA,GAAA,CAAY;;AAGzB,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,sBAAA,CAAA,IAAI,EAAA,kDAAA,EAAA,GAAA,CAA0B;;AAGvC,IAAA,IAAI,kBAAkB,GAAA;QACpB,OAAO,sBAAA,CAAA,IAAI,EAAA,4CAAA,EAAA,GAAA,CAAoB;;IAGzB,QAAQ,GAAA;AACd,QAAA,IAAI,CAAC,sBAAA,CAAA,IAAI,EAAA,4CAAA,EAAA,GAAA,CAAoB,EAAE;YAC7B;;AAEF,QAAA,IAAI,CAAC,sBAAA,CAAA,IAAI,EAAA,8CAAA,EAAA,GAAA,CAAsB,EAAE;YAC/B;;QAEF,MAAM,gBAAgB,GAA4B,EAAE;AAEpD,QAAA,MAAM,WAAW,GAAG,sBAAA,CAAA,IAAI,sDAAsB;AAE9C,QAAA,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,KAAI;AACjC,YAAA,MAAM,KAAK,GAAG,eAAe,CAAC,UAAU,CAAC;YACzC,gBAAgB,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AAC5C,SAAC,CAAC;AAEF,QAAA,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,KAAK,KAAK,KAAK,CAAC,EAAE;YAC3D,IAAI,eAAe,GAAG,CAAC;YACvB,IAAI,CAAC,sBAAA,CAAA,IAAI,EAAsB,8CAAA,EAAA,GAAA,CAAA,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAC9C,gBAAA,eAAe,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC;;YAG/C,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,GAAG,gBAAgB,CAAC,eAAe,CAAC;AACzD,YAAA,qBAAqB,CAAC,MACpB,sBAAA,CAAA,IAAI,EAA0B,kDAAA,EAAA,GAAA,CAAA,CAAC,IAAI,CAAC,UAAU,CAAC,CAChD;AACD,YAAA,sBAAA,CAAA,IAAI,EAAA,oCAAA,EAAe,UAAU,EAAA,GAAA,CAAA;YAC7B;;AAGF,QAAA,KAAK,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,gBAAgB,CAAC,OAAO,EAAE,EAAE;YAC5D,IAAI,KAAK,EAAE;AACT,gBAAA,qBAAqB,CAAC,MACpB,sBAAA,CAAA,IAAI,EAA0B,kDAAA,EAAA,GAAA,CAAA,CAAC,IAAI,CAAC,UAAU,CAAC,CAChD;AACD,gBAAA,sBAAA,CAAA,IAAI,EAAA,oCAAA,EAAe,UAAU,EAAA,GAAA,CAAA;gBAC7B;;;;IAKC,0BAA0B,GAAA;AAC/B,QAAA,sBAAA,CAAA,IAAI,EAAA,4CAAA,EAAuB,KAAK,EAAA,GAAA,CAAA;;IAG3B,yBAAyB,GAAA;AAC9B,QAAA,sBAAA,CAAA,IAAI,EAAA,4CAAA,EAAuB,IAAI,EAAA,GAAA,CAAA;;AAG1B,IAAA,aAAa,CAAC,UAAsB,EAAA;AACzC,QAAA,sBAAA,CAAA,IAAI,EAAA,oCAAA,EAAe,UAAU,EAAA,GAAA,CAAA;AAC7B,QAAA,sBAAA,CAAA,IAAI,EAA0B,kDAAA,EAAA,GAAA,CAAA,CAAC,IAAI,CAAC,UAAU,CAAC;;AAG1C,IAAA,cAAc,CAAC,WAAyB,EAAA;AAC7C,QAAA,sBAAA,CAAA,IAAI,EAAA,8CAAA,EAAyB,WAAW,EAAA,GAAA,CAAA;QACxC,IAAI,CAAC,QAAQ,EAAE;;AAElB;;AAEY,MAAA,wBAAwB,GAAG,IAAI,wBAAwB;;;;","names":[],"sources":["src/components/utils/debounce.ts","src/components/utils/application-layout/service.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\ntype AnyFunction = (...args: any[]) => any;\n\nexport function debounce<T extends AnyFunction>(\n  func: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: ReturnType<typeof setTimeout>;\n\n  return function debounced(...args: Parameters<T>): void {\n    clearTimeout(timeoutId);\n\n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, delay);\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Breakpoint, matchBreakpoint } from '../breakpoints';\nimport { debounce } from '../debounce';\nimport { TypedEvent } from '../typed-event';\n\nclass ApplicationLayoutService {\n  // Keep order of breakpoints\n  #supportedBreakpoints: Breakpoint[] = ['sm', 'md', 'lg'];\n  #breakpointChangeListener = new TypedEvent<Breakpoint>();\n  #breakpoint: Breakpoint = 'lg';\n\n  #isDetectionEnabled = true;\n  debouncedOnResize = debounce(this.onResize.bind(this), 50);\n\n  constructor() {\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', this.debouncedOnResize.bind(this));\n      this.debouncedOnResize();\n    }\n  }\n\n  get breakpoint() {\n    return this.#breakpoint;\n  }\n\n  get onChange() {\n    return this.#breakpointChangeListener;\n  }\n\n  get isDetectionEnabled() {\n    return this.#isDetectionEnabled;\n  }\n\n  private onResize() {\n    if (!this.#isDetectionEnabled) {\n      return;\n    }\n    if (!this.#supportedBreakpoints) {\n      return;\n    }\n    const matchBreakpoints: [Breakpoint, boolean][] = [];\n\n    const breakpoints = this.#supportedBreakpoints;\n\n    breakpoints.forEach((breakpoint) => {\n      const match = matchBreakpoint(breakpoint);\n      matchBreakpoints.push([breakpoint, match]);\n    });\n\n    if (matchBreakpoints.every(([_, match]) => match === false)) {\n      let breakPointIndex = 0;\n      if (!this.#supportedBreakpoints.includes('lg')) {\n        breakPointIndex = matchBreakpoints.length - 1;\n      }\n\n      const [breakpoint, _] = matchBreakpoints[breakPointIndex];\n      requestAnimationFrame(() =>\n        this.#breakpointChangeListener.emit(breakpoint)\n      );\n      this.#breakpoint = breakpoint;\n      return;\n    }\n\n    for (const [breakpoint, match] of matchBreakpoints.reverse()) {\n      if (match) {\n        requestAnimationFrame(() =>\n          this.#breakpointChangeListener.emit(breakpoint)\n        );\n        this.#breakpoint = breakpoint;\n        break;\n      }\n    }\n  }\n\n  public disableBreakpointDetection() {\n    this.#isDetectionEnabled = false;\n  }\n\n  public enableBreakpointDetection() {\n    this.#isDetectionEnabled = true;\n  }\n\n  public setBreakpoint(breakpoint: Breakpoint) {\n    this.#breakpoint = breakpoint;\n    this.#breakpointChangeListener.emit(breakpoint);\n  }\n\n  public setBreakpoints(breakpoints: Breakpoint[]) {\n    this.#supportedBreakpoints = breakpoints;\n    this.onResize();\n  }\n}\n\nexport const applicationLayoutService = new ApplicationLayoutService();\n"],"version":3}