{"file":"p-kY0vP3rC.js","mappings":"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","names":[],"sources":["src/components/utils/disposable-event-listener.ts","src/components/utils/find-element.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport type DisposableEventListener = () => void;\n\nexport const addDisposableEventListener = (\n  element: Element | Window | Document,\n  eventType: string,\n  callback: EventListenerOrEventListenerObject\n): DisposableEventListener => {\n  element.addEventListener(eventType, callback);\n\n  return () => {\n    element.removeEventListener(eventType, callback);\n  };\n};\n\nexport const addDisposableEventListenerAsArray = (\n  listener: {\n    element: Element | Window | Document;\n    eventType: string;\n    callback: EventListenerOrEventListenerObject;\n  }[]\n): DisposableEventListener => {\n  const disposables = listener.map(({ callback, element, eventType }) =>\n    addDisposableEventListener(element, eventType, callback)\n  );\n\n  return () => disposables.forEach((dispose) => dispose());\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Will try to resolve the selector in the light dom, shadow dom or slot\n * @param selector The selector to resolve\n * @param hostElement The element to start the search from\n * @returns Promise with the resolved elements or undefined if not found\n */\nexport async function resolveSelector(\n  selector: string,\n  hostElement?: HTMLElement\n): Promise<HTMLElement[] | undefined> {\n  const elements: HTMLElement[] = Array.from(\n    document.querySelectorAll(selector)\n  );\n\n  if (elements.length > 0) {\n    return Promise.resolve(elements);\n  }\n\n  if (hostElement === undefined) {\n    return Promise.resolve(undefined);\n  }\n\n  const shadowRoot = getRootFor(hostElement);\n\n  if (shadowRoot === undefined || !(shadowRoot instanceof ShadowRoot)) {\n    return Promise.resolve(undefined);\n  }\n\n  const elementsInShadowRoot: HTMLElement[] = Array.from(\n    shadowRoot.querySelectorAll(selector)\n  );\n\n  const elementsInHost: HTMLElement[] = Array.from(\n    shadowRoot.host.querySelectorAll(selector)\n  );\n\n  const elementsInComponent: HTMLElement[] = [\n    ...elementsInHost,\n    ...elementsInShadowRoot,\n  ];\n\n  if (elementsInComponent.length > 0) {\n    return Promise.resolve(elementsInComponent);\n  }\n\n  return Promise.resolve(undefined);\n}\n\n/**\n * Walk up the DOM to find the nearest shadow root\n * @param element The element to get the root for\n * @param parent This will determine how far up the DOM to travel to find the root\n * @returns The root element\n */\nexport function getRootFor(element: HTMLElement, parent = document.body) {\n  if (!element.parentElement && !element.parentNode) {\n    return undefined;\n  }\n\n  if (element.parentNode instanceof ShadowRoot) {\n    return element.parentNode;\n  }\n\n  let currentNode = element.parentElement;\n\n  while (currentNode) {\n    if (currentNode.shadowRoot) {\n      return currentNode.shadowRoot;\n    } else if (currentNode.parentNode instanceof ShadowRoot) {\n      return currentNode.parentNode;\n    }\n\n    currentNode = currentNode.parentElement;\n  }\n\n  return parent;\n}\n\nexport function waitForSelector(\n  selector: string,\n  node = document,\n  hostElement?: HTMLElement\n): Promise<Element> {\n  return new Promise((resolve) => {\n    const waitForElements = () => {\n      resolveSelector(selector, hostElement).then((elements) => {\n        if (elements && elements.length > 0) {\n          resolve(elements[0]);\n          observer?.disconnect();\n        }\n      });\n    };\n\n    waitForElements();\n\n    const observer = new MutationObserver(() => {\n      waitForElements();\n    });\n\n    observer.observe(node.body, {\n      childList: true,\n      subtree: true,\n    });\n  });\n}\n\n/**\n * Find an element by ID or reference\n * @param element The element to find\n * @param hostElement The element to start the search from\n * @returns A promise that will resolve to the element\n */\nexport function findElement(\n  element: string | HTMLElement | Promise<HTMLElement>,\n  hostElement?: HTMLElement\n): Promise<Element> {\n  if (element instanceof Promise) {\n    return element;\n  }\n\n  if (typeof element === 'object') {\n    return Promise.resolve(element);\n  }\n\n  const selector = `#${element}`;\n  return waitForSelector(selector, document, hostElement);\n}\n"],"version":3}