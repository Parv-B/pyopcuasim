{"file":"p-D6vSVaHq.js","mappings":"AAAA;;;;;;;AAOG;AAEH;AACA,MAAM,YAAY,GAAG;AACnB,IAAA,EAAE,EAAE,mBAAmB;AACvB,IAAA,EAAE,EAAE,8CAA8C;AAClD,IAAA,EAAE,EAAE,wBAAwB;CACpB;AAIG,MAAA,eAAe,GAAG,CAAC,UAAsB,KAAI;IACxD,IAAI,OAAO,MAAM,KAAK,WAAW,IAAK,MAAc,CAAC,UAAU,EAAE;AAC/D,QAAA,MAAM,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;QAC3C,OAAO,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,OAAO;;AAE9C,IAAA,OAAO,KAAK;AACd;;;;","names":[],"sources":["src/components/utils/breakpoints.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Implementation of scss breakpoints mixins/_break-points.scss\nconst mediaQueries = {\n  sm: '(max-width: 48em)',\n  md: '(min-width: 48.0625em) and (max-width: 80em)',\n  lg: '(min-width: 80.0625em)',\n} as const;\n\nexport type Breakpoint = keyof typeof mediaQueries;\n\nexport const matchBreakpoint = (breakpoint: Breakpoint) => {\n  if (typeof window !== 'undefined' && (window as any).matchMedia) {\n    const mediaQuery = mediaQueries[breakpoint];\n    return window.matchMedia(mediaQuery).matches;\n  }\n  return false;\n};\n"],"version":3}