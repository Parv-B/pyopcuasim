{"file":"ix-message-bar.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/message-bar/message-bar.scss?tag=ix-message-bar&encapsulation=shadow","src/components/message-bar/message-bar.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n  margin: $small-space $small-space 0rem $small-space;\n\n  .message-container {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    min-height: 3.375rem;\n    padding: calc(#{$medium-space} - var(--theme-message-bar--border-thickness))\n      $medium-space\n      calc(#{$medium-space} - var(--theme-message-bar--border-thickness))\n      $default-space;\n    border-radius: var(--theme-message-bar--border-radius);\n    background-color: var(--theme-messagebar--background);\n  }\n\n  $message-types: (\n    'alarm': var(--theme-color-alarm),\n    'danger': var(--theme-color-alarm),\n    'critical': var(--theme-color-critical),\n    'warning': var(--theme-color-warning),\n    'success': var(--theme-color-success),\n    'info': var(--theme-color-info),\n    'neutral': var(--theme-color-neutral),\n    'primary': var(--theme-color-primary)\n  );\n\n  @each $type, $color in $message-types {\n    .#{$type} {\n      border: solid var(--theme-message-bar--border-thickness) $color;\n    }\n  }\n\n\n  .message-content {\n    @include ellipsis;\n    flex-grow: 1;\n    align-self: center;\n    min-height: 1.25rem;\n    padding: 0 $default-space;\n    font-weight: normal;\n    white-space: normal;\n  }\n\n  ix-icon {\n    margin-top: $tiny-space;\n  }\n\n  .message-bar-hidden {\n    display: none;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\nimport anime from 'animejs';\nimport { NotificationColor } from '../utils/notification-color';\nimport {\n  iconClose,\n  iconError,\n  iconInfo,\n  iconNotification,\n  iconSuccess,\n  iconWarning,\n  iconWarningRhomb,\n} from '@siemens/ix-icons/icons';\n\ninterface MessageTypeConfig {\n  icon?: string;\n  color: NotificationColor;\n}\n\n@Component({\n  tag: 'ix-message-bar',\n  styleUrl: 'message-bar.scss',\n  shadow: true,\n})\nexport class MessageBar {\n  /**\n   * Specifies the type of the alert.\n   * @deprecated Type `danger` will be removed in 4.0. Use `alarm` instead.\n   */\n  @Prop() type:\n    | 'alarm'\n    | 'danger'\n    | 'critical'\n    | 'warning'\n    | 'success'\n    | 'info'\n    | 'neutral'\n    | 'primary' = 'info';\n\n  /**\n   * If true, close button is enabled and alert can be dismissed by the user\n   */\n  @Prop() dismissible = true;\n\n  /**\n   * An event emitted when the close button is clicked\n   */\n  @Event() closedChange!: EventEmitter;\n\n  /**\n   * An event emitted when the close animation is completed\n   */\n  @Event() closeAnimationCompleted!: EventEmitter;\n\n  @State() icon?: string;\n  @State() color?: NotificationColor;\n\n  private static readonly duration = 300;\n  private static readonly messageTypeConfigs: Record<\n    string,\n    MessageTypeConfig\n  > = {\n    alarm: { icon: iconError, color: 'color-alarm' },\n    danger: { icon: iconError, color: 'color-alarm' },\n    critical: { icon: iconWarningRhomb, color: 'color-critical' },\n    warning: { icon: iconWarning, color: 'color-warning' },\n    success: { icon: iconSuccess, color: 'color-success' },\n    info: { icon: iconInfo, color: 'color-info' },\n    neutral: { icon: iconNotification, color: 'color-neutral' },\n    primary: { icon: iconNotification, color: 'color-primary' },\n  };\n\n  private divElement?: HTMLElement;\n\n  componentWillRender() {\n    const config = MessageBar.messageTypeConfigs[this.type];\n    if (config) {\n      this.icon = config.icon;\n      this.color = config.color;\n    }\n  }\n\n  private closeAlert(el: HTMLElement) {\n    const { defaultPrevented } = this.closedChange.emit();\n\n    if (!defaultPrevented) {\n      anime({\n        targets: el,\n        duration: MessageBar.duration,\n        opacity: [1, 0],\n        easing: 'easeOutSine',\n        complete: () => {\n          el.classList.add('message-bar-hidden');\n          this.closeAnimationCompleted.emit();\n        },\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{ 'message-container': true, [this.type]: true }}\n          role=\"alert\"\n          ref={(el) => (this.divElement = el as HTMLElement)}\n        >\n          <ix-icon color={this.color} name={this.icon}></ix-icon>\n          <div class=\"message-content\">\n            <slot></slot>\n          </div>\n          {this.dismissible ? (\n            <ix-icon-button\n              icon={iconClose}\n              size=\"24\"\n              ghost={true}\n              onClick={() => {\n                if (this.divElement) {\n                  this.closeAlert(this.divElement);\n                }\n              }}\n              data-testid=\"close-btn\"\n            ></ix-icon-button>\n          ) : (\n            ''\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}