{"file":"p-Bi1VyG64.js","mappings":"AAAA;;;;;;;AAOG;AACa,SAAA,cAAc,CAAC,QAAgB,EAAE,EAAO,EAAA;IACtD,IAAI,CAAC,EAAE,EAAE;AACP,QAAA,OAAO,IAAI;;AAEb,IAAA,QACE,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;QACpB,cAAc,CAAC,QAAQ,EAAG,EAAE,CAAC,WAAW,EAAU,CAAC,IAAI,CAAC;AAE5D;AAEM,SAAU,kBAAkB,CAAU,IAAS,EAAA;IACnD,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AACjD;AAEM,SAAU,kBAAkB,CAAC,IAAS,EAAA;IAC1C,IAAI,CAAC,IAAI,EAAE;AACT,QAAA,OAAO,KAAK;;AAEd,IAAA,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC;AAC9D;AAYgB,SAAA,iBAAiB,CAAC,IAAU,EAAE,QAAgB,EAAA;IAC5D,IAAI,CAAC,IAAI,EAAE;AACT,QAAA,OAAO,IAAI;;AAGb,IAAA,IAAI,IAAI,YAAY,UAAU,EAAE;QAC9B,OAAO,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;;AAG/C,IAAA,IAAI,IAAI,YAAY,WAAW,EAAE;AAC/B,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC1B,YAAA,OAAO,IAAI;;aACN;YACL,OAAO,iBAAiB,CAAC,IAAI,CAAC,UAAW,EAAE,QAAQ,CAAC;;;IAIxD,OAAO,iBAAiB,CAAC,IAAI,CAAC,UAAW,EAAE,QAAQ,CAAC;AACtD;;;;","names":[],"sources":["src/components/utils/shadow-dom.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function closestElement(selector: string, el: any): null | Element {\n  if (!el) {\n    return null;\n  }\n  return (\n    el.closest(selector) ||\n    closestElement(selector, (el.getRootNode() as any).host)\n  );\n}\n\nexport function getSlottedElements<R = any>(slot: any): R[] {\n  return slot.assignedElements({ flatten: true });\n}\n\nexport function hasSlottedElements(slot: any) {\n  if (!slot) {\n    return false;\n  }\n  return slot.assignedElements({ flatten: true }).length !== 0;\n}\n\nexport function containsElement(target: Element, element: Element) {\n  const hasShadowDom = target.shadowRoot;\n\n  if (hasShadowDom) {\n    target.contains(element) || target.shadowRoot.contains(element);\n  }\n\n  return target.contains(element);\n}\n\nexport function closestPassShadow(node: Node, selector: string) {\n  if (!node) {\n    return null;\n  }\n\n  if (node instanceof ShadowRoot) {\n    return closestPassShadow(node.host, selector);\n  }\n\n  if (node instanceof HTMLElement) {\n    if (node.matches(selector)) {\n      return node;\n    } else {\n      return closestPassShadow(node.parentNode!, selector);\n    }\n  }\n\n  return closestPassShadow(node.parentNode!, selector);\n}\n"],"version":3}